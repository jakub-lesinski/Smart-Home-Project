// Generated by view binder compiler. Do not edit!
package com.example.smarthome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smarthome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnBluetoothOff;

  @NonNull
  public final AppCompatButton btnBluetoothOn;

  @NonNull
  public final AppCompatButton btnBluetoothPaired;

  @NonNull
  public final AppCompatButton btnConnect;

  @NonNull
  public final AppCompatButton btnFunctions;

  @NonNull
  public final AppCompatButton btnPV;

  private ActivityMainBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnBluetoothOff, @NonNull AppCompatButton btnBluetoothOn,
      @NonNull AppCompatButton btnBluetoothPaired, @NonNull AppCompatButton btnConnect,
      @NonNull AppCompatButton btnFunctions, @NonNull AppCompatButton btnPV) {
    this.rootView = rootView;
    this.btnBluetoothOff = btnBluetoothOff;
    this.btnBluetoothOn = btnBluetoothOn;
    this.btnBluetoothPaired = btnBluetoothPaired;
    this.btnConnect = btnConnect;
    this.btnFunctions = btnFunctions;
    this.btnPV = btnPV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBluetoothOff;
      AppCompatButton btnBluetoothOff = ViewBindings.findChildViewById(rootView, id);
      if (btnBluetoothOff == null) {
        break missingId;
      }

      id = R.id.btnBluetoothOn;
      AppCompatButton btnBluetoothOn = ViewBindings.findChildViewById(rootView, id);
      if (btnBluetoothOn == null) {
        break missingId;
      }

      id = R.id.btnBluetoothPaired;
      AppCompatButton btnBluetoothPaired = ViewBindings.findChildViewById(rootView, id);
      if (btnBluetoothPaired == null) {
        break missingId;
      }

      id = R.id.btnConnect;
      AppCompatButton btnConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnConnect == null) {
        break missingId;
      }

      id = R.id.btnFunctions;
      AppCompatButton btnFunctions = ViewBindings.findChildViewById(rootView, id);
      if (btnFunctions == null) {
        break missingId;
      }

      id = R.id.btnPV;
      AppCompatButton btnPV = ViewBindings.findChildViewById(rootView, id);
      if (btnPV == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnBluetoothOff, btnBluetoothOn,
          btnBluetoothPaired, btnConnect, btnFunctions, btnPV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
